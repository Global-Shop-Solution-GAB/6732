Program.Sub.Preflight.Start
Program.Sub.Preflight.End

'ARC#6732
'Customer: Richard Manufacturing Co

'Richard MFG is using Paylocity as their Payroll Provider and would like to integrate it with GSS. The
'integration will be passing payroll T&A from GSS to Paylocity, and update specific GSS employee
'master records from changes that are made in Paylocity.
'Richard MFG has employee master records that change quarterly based on pay rate changes and
'need a simple way of keep GSS and Paylocity synced with the same data for the employee master.


'This script allows user to choose a file to import Employee New Rate
'The file must be in Excel Sheet
'Columns: 
'The scripts will:
'	- skip col START_DATE, import date will be the start date for new Rate
'	- Today's date will be DATE_RATE which is for Last Rate Date (not Start Date)
'	- lookup old Rate and fill in RATE_PREVIOUS


Program.Sub.Main.Start
f.Intrinsic.Control.Try

Function.Intrinsic.UI.UsePixels ' Allows you to use Pixels instead of Twips throughout
	v.Local.sFile.Declare(String)
	v.Local.sRet.Declare(String)
	v.Local.bInString.Declare(Boolean)
	v.Local.bExists.Declare(Boolean)
	v.Local.sEmpoyeeInfo.Declare(String)
	v.Local.sSQL.Declare(String)
	v.Local.iCounter.Declare(Long)
	
'	v.Local.dDateLastRate.Declare(Date)
	v.Local.sDateLastRate.Declare(String)
	
	'Browse file
	'	Validate if file is valid
	'	user did not click CANCEL
	'	.xls or .xlsx
	'	file exists
	'----------------------------------------------------
	'file dialog
	f.Intrinsic.UI.ShowOpenFileDialog("", "*.xls", "", v.Local.sFile)
	
	#Region "Validate File"
	'CANCEL
	f.Intrinsic.Control.If(v.Local.sFile,=,"***CANCEL***")
		'unload
		f.Intrinsic.Control.ExitSub
	f.Intrinsic.Control.EndIf
	
	'File Exists
	f.Intrinsic.File.Exists(v.Local.sFile, v.Local.bExists)
	f.Intrinsic.Control.If(v.Local.bExists,=,False)
		f.Intrinsic.UI.Msgbox("File does not exists.")
		f.Intrinsic.Control.ExitSub
	f.Intrinsic.Control.EndIf
	
	'Extension
	f.Intrinsic.String.IsInString(v.Local.sFile, ".xls", True, v.Local.bInString)
	
	f.Intrinsic.Control.If(v.Local.bInString,=,False)
		f.Intrinsic.UI.Msgbox("Invalid file. Must be MS Excel.")
		f.Intrinsic.Control.ExitSub
	f.Intrinsic.Control.EndIf
	
	#End Region
	'----------------------------------------------------
	
	
	
	'Read file
	'	remove header lines
	'	read file into datatable
	'	filter bad data: data with blank EMPLOYEEID
	'----------------------------------------------------
	f.Intrinsic.UI.InvokeWaitDialog("Reading File...")
	f.Automation.MSExcel.ReadSpreadsheet(v.Local.sFile, v.Local.sRet)
	f.Intrinsic.String.Split(v.Local.sRet, "&^&", v.Local.sRet)
	
	'get rid of header
	#Region "Remove header"
	f.Intrinsic.String.Split(v.Local.sRet(0), "$!$", v.Local.sEmpoyeeInfo)
	v.Local.sEmpoyeeInfo(0).Set("REMOVEDHEADER")
	f.Intrinsic.String.Join(v.Local.sEmpoyeeInfo, "$!$", v.Local.sEmpoyeeInfo)
	f.Intrinsic.String.Replace(v.Local.sEmpoyeeInfo, "REMOVEDHEADER$!$", "", v.Local.sEmpoyeeInfo)
	
	'read into datatables
	f.Data.Datatable.CreateFromString("dtEmployeeRaw", v.Local.sEmpoyeeInfo, "EMPLOYEEID*!*NAME_FIRST*!*NAME_LAST*!*DATE_START_RATE*!*RATE*!*PERUNIT", "string*!*string*!*string*!*string*!*string*!*string", "*!*", "$!$")
	
	f.Data.DataView.Create("dtEmployeeRaw", "dvEmpTemp", 22, "EMPLOYEEID<>''", "")
	f.Data.DataView.ToDataTable("dtEmployeeRaw", "dvEmpTemp", "dtEmployee")
	f.Data.DataView.Close("dtEmployeeRaw","dvEmpTemp")
	f.Data.Datatable.Close("dtEmployeeRaw")
	'----------------------------------------------------
	
	
	
	
	'Import
	'	Read thru each line
	'	Build Update command
	'	Execute
	'	Counting and result?
	'----------------------------------------------------
	f.Intrinsic.Control.If(v.DataTable.dtEmployee.RowCount,=,0)
		f.Intrinsic.UI.Msgbox("No New Valid Records from the File.")
		f.Intrinsic.Control.End
	f.Intrinsic.Control.EndIf
	
	'LPAD EmpID
	f.Data.Datatable.AddColumn("dtEmployee", "EMP_ID_FULL", String)
	f.Data.Datatable.SetValueFormat("dtEmployee", -1, "EMPLOYEEID", "EMP_ID_FULL", "0000#")
	
	f.ODBC.Connection!Con.OpenCompanyConnection(999)
	
	'fill old rate with Dict
	f.Data.Datatable.AddColumn("dtEmployee", "OLD_RATE", "Float")
	f.Data.Dictionary.CreateFromSQL("dictOldRate", "Con", "Select EMPLOYEE, RATE from V_EMPLOYEE_MSTR")
	f.Data.Dictionary.SetDefaultReturn("dictOldRate", "0.0")
	f.Data.Datatable.FillFromDictionary("dtEmployee", "dictOldRate", "EMP_ID_FULL", "OLD_RATE")
	
	f.Intrinsic.Control.For(v.Local.iCounter,0, v.DataTable.dtEmployee.RowCount--,1)
		f.Intrinsic.String.Format(v.DataTable.dtEmployee(v.Local.iCounter).DATE_START_RATE!FieldVal, "MMDDYY", v.Local.sDateLastRate)
		f.Intrinsic.String.Build("update EMPLOYEE_MSTR set RATE_PREVIOUS='{0}', RATE='{1}', DATE_RAISE='{2}' where EMPLOYEE='{3}'", v.DataTable.dtEmployee(v.Local.iCounter).OLD_RATE!FieldVal, v.DataTable.dtEmployee(v.Local.iCounter).RATE!FieldVal, v.Local.sDateLastRate, v.DataTable.dtEmployee(v.Local.iCounter).EMP_ID_FULL!FieldValTrim, v.Local.sSQL)
		f.ODBC.Connection!Con.Execute(v.Local.sSQL)
	f.Intrinsic.Control.Next(v.Local.iCounter)
	
	f.ODBC.Connection!Con.Close
	'----------------------------------------------------

	f.Intrinsic.UI.Msgbox("Import Completed.")
	
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry

Program.Sub.Main.End

Program.Sub.Comments.Start
${$5$}$3.0.0.0$}$1
${$6$}$nle$}$20220526160143998$}$kjzCRYkA6UEoRnCwndYnRUA1sRHcWHr/DFCFyzyGso9pzvo+kOrRJOTjiwgig5+H
Program.Sub.Comments.End